// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderDelayAnnouncement.Infrastructure.Persistance;

#nullable disable

namespace OrderDelayAnnouncement.Infrastructure.Migrations
{
    [DbContext(typeof(OMSContext))]
    partial class OMSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Agent", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Reza"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hassan"
                        });
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Amir"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ali"
                        });
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.DelayReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DelayTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("OrderId");

                    b.ToTable("DelayReport", (string)null);
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("VendorId");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedTime = new DateTime(2023, 12, 7, 10, 38, 19, 455, DateTimeKind.Local).AddTicks(2834),
                            CustomerId = 1,
                            DeliveredAt = new DateTime(2023, 12, 7, 10, 43, 19, 455, DateTimeKind.Local).AddTicks(2837),
                            DeliveredTime = new DateTime(2023, 12, 7, 10, 53, 19, 455, DateTimeKind.Local).AddTicks(2815),
                            VendorId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedTime = new DateTime(2023, 12, 7, 10, 38, 19, 455, DateTimeKind.Local).AddTicks(2843),
                            CustomerId = 2,
                            DeliveredAt = new DateTime(2023, 12, 7, 10, 58, 19, 455, DateTimeKind.Local).AddTicks(2844),
                            DeliveredTime = new DateTime(2023, 12, 7, 10, 53, 19, 455, DateTimeKind.Local).AddTicks(2842),
                            VendorId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedTime = new DateTime(2023, 12, 7, 10, 38, 19, 455, DateTimeKind.Local).AddTicks(2846),
                            CustomerId = 2,
                            DeliveredTime = new DateTime(2023, 12, 7, 10, 41, 19, 455, DateTimeKind.Local).AddTicks(2845),
                            VendorId = 2
                        });
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("Trip", (string)null);
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Motahari"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Enghelab"
                        });
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.DelayReport", b =>
                {
                    b.HasOne("OrderDelayAnnouncement.Domain.Agent", "Agent")
                        .WithMany("DelayReports")
                        .HasForeignKey("AgentId");

                    b.HasOne("OrderDelayAnnouncement.Domain.Order", "Order")
                        .WithMany("DelayReports")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Order", b =>
                {
                    b.HasOne("OrderDelayAnnouncement.Domain.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderDelayAnnouncement.Domain.Vendor", "Vendor")
                        .WithMany("Orders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Trip", b =>
                {
                    b.HasOne("OrderDelayAnnouncement.Domain.Order", "Order")
                        .WithOne("Trip")
                        .HasForeignKey("OrderDelayAnnouncement.Domain.Trip", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Agent", b =>
                {
                    b.Navigation("DelayReports");
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Order", b =>
                {
                    b.Navigation("DelayReports");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("OrderDelayAnnouncement.Domain.Vendor", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
